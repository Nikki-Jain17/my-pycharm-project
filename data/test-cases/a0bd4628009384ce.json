{"uid":"a0bd4628009384ce","name":"test_sql_to_azure","fullName":"testing.test_sql_to_azure#test_sql_to_azure","historyId":"f0eb8b73246d88b28654bcc0b7dd1c3b","time":{"start":1746618174447,"stop":1746618174447,"duration":0},"status":"failed","statusMessage":"AssertionError: Math is wrong!\nassert (2 + 2) == 5","statusTrace":"flow = 'sql_to_azure', component = 'register_physical_dataset'\n\n    @allure.suite(\"SQL to Azure Suite\")\n    @allure.feature(\"SQL to Azure Workflow\")\n    @pytest.mark.P1\n    def test_sql_to_azure(flow, component):\n    \n        with allure.step(f\"Running flow: {flow}\"):\n            logger.info(f\"Running flow: {flow}\")\n    \n        with allure.step(f\"Running component: {component}\"):\n            logger.info(f\"Running flow: {flow}\")\n    \n        e2e_flow_config = load_config(f'{flow}/e2eflow.yml')\n    \n        if component is None or component == \"none\":\n            # End-to-end mode: Run **all components** one by one\n            for comp in e2e_flow_config:\n                with allure.step(f\"Running full E2E flow for component: {comp}\"):\n                    logger.info(f\"Executing full flow logic for component: {comp}\")\n                    # you can call your function to run component here\n        else:\n            if component not in e2e_flow_config:\n                with allure.step(f\"{component} not found * for {flow}\"):\n                    logger.error(f\"Component '{component}' not found in {flow}/e2eflow.yml\")\n                    pytest.fail(f\"Component '{component}' not found in {flow}/e2eflow.yml\")\n    \n            if e2e_flow_config[component][\"enabled\"]:\n                with allure.step(f\"{component} execution successful for {flow}\"):\n                    logger.info(f\"{component} execution successful for {flow}\")\n>                   assert 2 + 2 == 5, \"Math is wrong!\"\nE                   AssertionError: Math is wrong!\nE                   assert (2 + 2) == 5\n\ntesting\\test_sql_to_azure.py:36: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1746618174353,"stop":1746618174447,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flow","time":{"start":1746618174447,"stop":1746618174447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"component","time":{"start":1746618174447,"stop":1746618174447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Math is wrong!\nassert (2 + 2) == 5","statusTrace":"flow = 'sql_to_azure', component = 'register_physical_dataset'\n\n    @allure.suite(\"SQL to Azure Suite\")\n    @allure.feature(\"SQL to Azure Workflow\")\n    @pytest.mark.P1\n    def test_sql_to_azure(flow, component):\n    \n        with allure.step(f\"Running flow: {flow}\"):\n            logger.info(f\"Running flow: {flow}\")\n    \n        with allure.step(f\"Running component: {component}\"):\n            logger.info(f\"Running flow: {flow}\")\n    \n        e2e_flow_config = load_config(f'{flow}/e2eflow.yml')\n    \n        if component is None or component == \"none\":\n            # End-to-end mode: Run **all components** one by one\n            for comp in e2e_flow_config:\n                with allure.step(f\"Running full E2E flow for component: {comp}\"):\n                    logger.info(f\"Executing full flow logic for component: {comp}\")\n                    # you can call your function to run component here\n        else:\n            if component not in e2e_flow_config:\n                with allure.step(f\"{component} not found * for {flow}\"):\n                    logger.error(f\"Component '{component}' not found in {flow}/e2eflow.yml\")\n                    pytest.fail(f\"Component '{component}' not found in {flow}/e2eflow.yml\")\n    \n            if e2e_flow_config[component][\"enabled\"]:\n                with allure.step(f\"{component} execution successful for {flow}\"):\n                    logger.info(f\"{component} execution successful for {flow}\")\n>                   assert 2 + 2 == 5, \"Math is wrong!\"\nE                   AssertionError: Math is wrong!\nE                   assert (2 + 2) == 5\n\ntesting\\test_sql_to_azure.py:36: AssertionError","steps":[{"name":"Running flow: sql_to_azure","time":{"start":1746618174447,"stop":1746618174447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Running component: register_physical_dataset","time":{"start":1746618174447,"stop":1746618174447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"register_physical_dataset execution successful for sql_to_azure","time":{"start":1746618174447,"stop":1746618174447,"duration":0},"status":"failed","statusMessage":"AssertionError: Math is wrong!\nassert (2 + 2) == 5\n","statusTrace":"  File \"D:\\a\\my-pycharm-project\\my-pycharm-project\\testing\\test_sql_to_azure.py\", line 36, in test_sql_to_azure\n    assert 2 + 2 == 5, \"Math is wrong!\"\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Failure in test: test_sql_to_azure","time":{"start":1746618174525,"stop":1746618174525,"duration":0},"status":"passed","steps":[],"attachments":[{"name":"Failure Details","type":"text/plain","size":0}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"name":"log","type":"text/plain","size":0},{"name":"stderr","type":"text/plain","size":0}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"SQL to Azure Workflow"},{"name":"suite","value":"SQL to Azure Suite"},{"name":"tag","value":"P1"},{"name":"parentSuite","value":"testing"},{"name":"host","value":"fv-az2235-843"},{"name":"thread","value":"5472-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testing.test_sql_to_azure"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["P1"]},"source":"a0bd4628009384ce.json","parameterValues":[]}